import React, { useEffect, useState } from "react";
import classes from "./ServicePage.module.css";
import { useNavigate } from "react-router-dom";
import CenterBlock from "../../Standart/CenterBlock/CenterBlock";
import WidthBlock from "../../Standart/WidthBlock/WidthBlock";
import serverConfig from "../../../serverConfig";
import uploadsConfig from "../../../uploadsConfig";

function ServicePage({ children, ...props }) {
  const navigate = useNavigate();

  const [service, setService] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [searchQuery, setSearchQuery] = useState(""); // üîç –í–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
  const [debouncedSearchQuery, setDebouncedSearchQuery] = useState(""); // üîÑ –î–µ–±–∞—É–Ω—Å —Å—Ç—Ä–æ–∫–∞

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      try {
        const response = await fetch(`${serverConfig}/supports`);
        const servicesData = await response.json();
        setService(servicesData);
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", err);
        setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  // ‚è≥ –î–µ–±–∞—É–Ω—Å-—Ñ—É–Ω–∫—Ü–∏—è: –æ–±–Ω–æ–≤–ª—è–µ—Ç `debouncedSearchQuery` —á–µ—Ä–µ–∑ 500 –º—Å –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞
  useEffect(() => {
    const handler = setTimeout(() => {
      setDebouncedSearchQuery(searchQuery);
    }, 500); // ‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 500 –º—Å

    return () => clearTimeout(handler); // üöÄ –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ –Ω–æ–≤–æ–º –≤–≤–æ–¥–µ
  }, [searchQuery]);

  // üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ `debouncedSearchQuery`
  const filteredServices = service.filter((el) =>
    el.title.toLowerCase().includes(debouncedSearchQuery.toLowerCase())
  );

  return (
    <>
      <CenterBlock>
        <WidthBlock>
          <div className={classes.input}>
            {/* üîç –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å –¥–µ–±–∞—É–Ω—Å–æ–º */}
            <input
              type="text"
              placeholder="–ù–∞–π—Ç–∏..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className={classes.searchInput} // –ú–æ–∂–Ω–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å
            />
          </div>
          <div className={classes.container}>
            {filteredServices.length > 0 ? (
              filteredServices.map((el) => (
                <div className={classes.containerCard} key={el.id}>
                  <img
                    src={`${uploadsConfig}${el.img[0]}`}
                    className={classes.containerCardImg}
                    alt={el.title}
                  />
                  <img src="/images/roket.png" alt="–†–∞–∫–µ—Ç–∞" />
                  <img src="/images/orangeSer.png" alt="–û—Ä–∞–Ω–∂–µ–≤—ã–π —Å–µ—Ä–≤–∏—Å" />
                  <div className={classes.containerCardBottom}>
                    <span>{el.title}</span>
                    <span
                      className={classes.readMore}
                      onClick={() =>
                        navigate(
                          `/service/${el.title
                            .replaceAll(" ", "-")
                            .replaceAll("¬´", "")
                            .replaceAll("¬ª", "")}`
                        )
                      }
                    >
                      <img src="/images/strelka.png" alt="–°—Ç—Ä–µ–ª–∫–∞" />
                    </span>
                  </div>
                </div>
              ))
            ) : (
              <p className={classes.noResults}>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
            )}
          </div>
        </WidthBlock>
      </CenterBlock>
    </>
  );
}

export default ServicePage;
