import React from 'react';
import {
  List,
  Datagrid,
  TextField,
  EditButton,
  DeleteButton,
  ImageField,
  ReferenceInput,
  SelectInput,
  ReferenceArrayInput,
  SelectArrayInput,
  ImageInput,
  FunctionField,
  BooleanInput,
} from 'react-admin';
import { Create, SimpleForm, TextInput, Edit } from 'react-admin';
import { handleSave, handleSaveWithImages } from '../JS/fileUploadUtils';
import uploadsConfig from '../../../../uploadsConfig';
import RichTextInput from '../Auth/RichTextInput';

// üìå –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–µ–∫
export const SupportList = (props) => (
  <List {...props}>
    <Datagrid rowClick="edit">
      <TextField source="id" label="ID" />
      <TextField source="title" label="–ù–∞–∑–≤–∞–Ω–∏–µ" />
      <TextField source="description" label="–û–ø–∏—Å–∞–Ω–∏–µ" />
      <TextField source="typeSupport.title" label="–¢–∏–ø" />
      <TextField source="popular" label="–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ" />
      {/* ‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é */}
      <FunctionField
        source="tags"
        label="–¢–µ–≥–∏"
        render={(record) =>
          record.tags?.map((tag) => tag.title).join(', ') || '-'
        }
      />

      {/* ‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      <TextField source="img" label="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" />

      <EditButton />
      <DeleteButton />
    </Datagrid>
  </List>
);

// üìå –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
export const SupportCreate = (props) => (
  <Create {...props} transform={handleSave}>
    <SimpleForm>
      <TextInput source="title" label="–ù–∞–∑–≤–∞–Ω–∏–µ" />
      <RichTextInput source="description" label="–û–ø–∏—Å–∞–Ω–∏–µ" multiline />

      {/* ‚úÖ –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ */}
      <ReferenceInput
        source="typeSupportId"
        reference="typeSupports"
        label="–¢–∏–ø –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
      >
        <SelectInput optionText="title" />
      </ReferenceInput>
      <BooleanInput source="popular" label="–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ?" />
      {/* ‚úÖ –í—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–µ–≥–æ–≤ */}
      <ReferenceArrayInput
        source="tagIds"
        reference="tagsSupports"
        label="–¢–µ–≥–∏"
      >
        <SelectArrayInput optionText="title" />
      </ReferenceArrayInput>

      {/* ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      <ImageInput
        source="img"
        label="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        multiple
        accept="image/*"
      >
        <ImageField source="src" title="title" />
      </ImageInput>
    </SimpleForm>
  </Create>
);

// üìå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
export const SupportEdit = (props) => (
  <Edit {...props} transform={handleSaveWithImages}>
    <SimpleForm>
      <TextInput source="title" label="–ù–∞–∑–≤–∞–Ω–∏–µ" />
      <RichTextInput source="description" label="–û–ø–∏—Å–∞–Ω–∏–µ" multiline />

      {/* ‚úÖ –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ */}
      <ReferenceInput
        source="typeSupportId"
        reference="typeSupports"
        label="–¢–∏–ø –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
      >
        <SelectInput optionText="title" />
      </ReferenceInput>
      <BooleanInput source="popular" label="–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ?" />
      {/* ‚úÖ –í—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–µ–≥–æ–≤ */}
      <ReferenceArrayInput
        source="tagIds"
        reference="tagsSupports"
        label="–¢–µ–≥–∏"
      >
        <SelectArrayInput optionText="title" />
      </ReferenceArrayInput>

      {/* ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      <ImageInput
        source="imagesRaw"
        label="–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        multiple
        accept="image/*"
      >
        <ImageField source="src" title="title" />
      </ImageInput>

      {/* –ü–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      <ImageInput
        source="img"
        label="–°—Ç–∞—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        multiple
        accept="image/*"
        format={(value) =>
          value && value.length
            ? value.map((image) => ({
                src: image.includes('http')
                  ? image
                  : `${uploadsConfig}${image}`,
                title: image,
              }))
            : []
        }
        parse={(value) =>
          value.map((file) => {
            // –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π —Ñ–∞–π–ª (–∏–º–µ–µ—Ç rawFile), –≤–µ—Ä–Ω–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ –∏–º—è
            if (file.rawFile) {
              return file.rawFile;
            }
            // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∏–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ src), –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
            return file.src.replace(`${uploadsConfig}`, '');
          })
        }
      >
        <ImageField source="src" title="title" />
      </ImageInput>
    </SimpleForm>
  </Edit>
);
