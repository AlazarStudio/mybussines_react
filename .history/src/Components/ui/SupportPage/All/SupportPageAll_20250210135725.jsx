import React, { useEffect, useState } from 'react';
import classes from './SupportPageAll.module.css';
import CenterBlock from '../../../Standart/CenterBlock/CenterBlock';
import WidthBlock from '../../../Standart/WidthBlock/WidthBlock';
import serverConfig from '../../../../serverConfig';
import uploadsConfig from '../../../../uploadsConfig';

export default function SupportPageAll({ activeTab }) {
  const [supports, setSupports] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [searchQuery, setSearchQuery] = useState(''); // üîç –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      try {
        const response = await fetch(`${serverConfig}/supports`);
        const supportsData = await response.json();
        setSupports(supportsData);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  // üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–µ (federal/regional) + –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  const filteredSupportsType = supports
    .filter((support) => {
      if (activeTab === 'federal') {
        return support.typeSupport.title === '–§–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è –º–µ—Ä–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏';
      }
      if (activeTab === 'regional') {
        return support.typeSupport.title === '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–µ—Ä–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏';
      }
      return false;
    })
    .filter(
      (support) =>
        support.title.toLowerCase().includes(searchQuery.toLowerCase()) // –ü–æ–∏—Å–∫
    );

    const transliterate = (text) => {
      const map = {
        –ê: 'A',
        –ë: 'B',
        –í: 'V',
        –ì: 'G',
        –î: 'D',
        –ï: 'E',
        –Å: 'E',
        –ñ: 'Zh',
        –ó: 'Z',
        –ò: 'I',
        –ô: 'Y',
        –ö: 'K',
        –õ: 'L',
        –ú: 'M',
        –ù: 'N',
        –û: 'O',
        –ü: 'P',
        –†: 'R',
        –°: 'S',
        –¢: 'T',
        –£: 'U',
        –§: 'F',
        –•: 'Kh',
        –¶: 'Ts',
        –ß: 'Ch',
        –®: 'Sh',
        –©: 'Shch',
        –´: 'Y',
        –≠: 'E',
        –Æ: 'Yu',
        –Ø: 'Ya',
        –∞: 'a',
        –±: 'b',
        –≤: 'v',
        –≥: 'g',
        –¥: 'd',
        –µ: 'e',
        —ë: 'e',
        –∂: 'zh',
        –∑: 'z',
        –∏: 'i',
        –π: 'y',
        –∫: 'k',
        –ª: 'l',
        –º: 'm',
        –Ω: 'n',
        –æ: 'o',
        –ø: 'p',
        —Ä: 'r',
        —Å: 's',
        —Ç: 't',
        —É: 'u',
        —Ñ: 'f',
        —Ö: 'kh',
        —Ü: 'ts',
        —á: 'ch',
        —à: 'sh',
        —â: 'shch',
        —ã: 'y',
        —ç: 'e',
        —é: 'yu',
        —è: 'ya',
        ' ': '-',
      };

  return (
    <>
      <div className={classes.back}>
        <CenterBlock>
          <WidthBlock>
            <div className={classes.containerGroup}>
              {/* üîç –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ */}
              <input
                type="text"
                placeholder="–ù–∞–π—Ç–∏..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className={classes.searchInput} // –ú–æ–∂–Ω–æ —Å—Ç–∏–ª–∏–∑–æ–≤–∞—Ç—å
              />

              <div className={classes.containerGroupContent}>
                {filteredSupportsType.length > 0 ? (
                  filteredSupportsType.map((support) => (
                    <div
                      className={classes.containerGroupContentCard}
                      key={support.id}
                    >
                      <img src={`${uploadsConfig}${support.img[0]}`} />
                      <span>{support.title}</span>
                      <span
                      onClick={() =>
                        navigate(
                          `/supports/${encodeURIComponent(
                            transliterate(
                              support.title.replaceAll('¬´', '').replaceAll('¬ª', '')
                            )
                          )}`
                        )
                      }
                        style={{
                          background:
                            activeTab === 'federal' ? '#3D2A92' : '#733897',
                        }}
                      >
                        –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
                      </span>
                    </div>
                  ))
                ) : (
                  <p className={classes.noResults}>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                )}
              </div>
            </div>
          </WidthBlock>
        </CenterBlock>
      </div>
    </>
  );
}
